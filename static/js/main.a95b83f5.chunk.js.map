{"version":3,"sources":["assets/img/addTask.svg","assets/img/openMenu2.svg","assets/img/switchOn.svg","assets/img/success_tick.svg","assets/img/unsuccess_tick2.svg","assets/img/mainPreloader.gif","assets/img/spinner.svg","Components/StyledComponents/Wrapper.ts","Components/StyledComponents/StyledFooter.ts","redux/toDoReducer.ts","Components/StyledComponents/StyledAddTaskTextarea.ts","Components/Footer/AddTaskTextarea.tsx","Components/StyledComponents/StyledButton.ts","Components/Footer/NewTaskForm.tsx","Components/Footer/index.tsx","Components/StyledComponents/StyledHeader.ts","Components/Header/index.tsx","Components/StyledComponents/StyledTask.ts","Components/Main/Task/Task.tsx","Components/StyledComponents/StyledMain.ts","Components/StyledComponents/StyledPreloader.ts","Components/Main/index.tsx","Components/App/index.tsx","redux/toDoSelectors.ts","Components/App/indexContainer.tsx","API/index.ts","redux/sagas.ts","redux/store.ts","index.tsx","assets/img/deleteTask.svg"],"names":["module","exports","Wrapper","styled","div","StyledFooter","footer","initialState","authorizeData","id","email","login","lists","tasks","tasksTotalCount","tasksAmountToRequire","toDoReducer","state","action","type","payload","items","totalCount","newAmount","checkAuthorization","setAuthorizeData","loginData","password","rememberMe","requireTasks","listId","count","page","setTasksAmountToRequire","StyledAddTaskTextarea","textarea","props","textareaHeight","TextArea","useState","textareaScrollHeight","setTextareaScrollHeight","textareaRef","React","createRef","useEffect","scrollHeight","current","parseInt","input","meta","placeholder","ref","StyledButton","button","width","height","picture","deleteTask","picSize","opacity","reduxForm","form","onSubmit","handleSubmit","Field","component","AddTaskTextArea","name","addTaskPicture","Footer","dispatch","useDispatch","formData","title","taskTitle","StyledHeader","header","Header","openMenuPicture","className","switchOn","StyledTask","completed","tick","unTick","Task","task","updateTask","status","onClick","completedTask","description","priority","startDate","deadline","todoListId","Date","addedDate","toLocaleString","deleteTaskPicture","style","marginLeft","StyledMain","StyledPreloader","coronaPreloader","spinner","Main","setCount","mainRef","useRef","scrollMain","useCallback","throttle","e","target","scrollTop","offsetHeight","addEventListener","removeEventListener","tasksList","map","key","App","getTasks","toDo","getTasksTotalCount","getUserId","getTasksAmountToRequire","mdtp","taskId","deleteList","newTaskStatus","connect","userId","instance","axios","create","baseURL","withCredentials","headers","authorizeAPI","get","response","data","console","log","post","listsAPI","listTitle","delete","tasksAPI","put","rootSaga","checkAuthorizationWatcher","checkAuthorizationWorker","loginWatcher","loginWorker","requireListsWatcher","requireListsWorker","createListWatcher","createListWorker","deleteListWatcher","deleteListWorker","requireTasksWatcher","requireTasksWorker","createTaskWatcher","createTaskWorker","deleteTaskWatcher","deleteTaskWorker","updateTaskWatcher","updateTaskWorker","all","takeEvery","call","resultCode","messages","listsData","reset","select","rootReducer","combineReducers","formReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a95b83f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addTask.00b634f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/openMenu2.01603b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/switchOn.eb40b44b.svg\";","module.exports = __webpack_public_path__ + \"static/media/success_tick.2951d77b.svg\";","module.exports = __webpack_public_path__ + \"static/media/unsuccess_tick2.39fbd4e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainPreloader.92bf5ea0.gif\";","module.exports = __webpack_public_path__ + \"static/media/spinner.19ee5868.svg\";","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  bgColor?: string;\r\n}\r\n\r\nconst Wrapper = styled.div<Props>`\r\n  /* border: 1px solid yellow; */\r\n  width: 70%;\r\n  margin: 0 auto;\r\n  color: #eee;\r\n  box-shadow: 0px 5px 20px black;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n\r\n  .container {\r\n    /* border: 1px solid white; */\r\n    max-height: 92vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledFooter = styled.footer`\r\n  /* border: 1px solid yellow; */\r\n  background-color: #292760;\r\n  display: flex;\r\n  max-height: 15vh;\r\n\r\n  & > form {\r\n    /* border: 1px solid green; */\r\n    width: 100%;\r\n    display: flex;\r\n    max-height: inherit;\r\n  }\r\n`;\r\n\r\nexport default StyledFooter;\r\n","import { NewTaskStatus } from \"../API\";\r\n\r\nexport const CHECK_AUTHORIZATION = \"todo/CHECK_AUTHORIZATION\";\r\nexport const SET_AUTHORIZE_DATA = \"todo/SET_AUTHORIZE_DATA\";\r\nexport const LOGIN = \"todo/LOGIN\";\r\n\r\nexport const REQUIRE_LISTS = \"todo/REQUIRE_LISTS\";\r\nexport const SET_LISTS = \"todo/SET_LISTS\";\r\nexport const CREATE_LIST = \"todo/CREATE_LIST\";\r\nexport const DELETE_LIST = \"todo/DELETE_LIST\";\r\n\r\nexport const REQUIRE_TASKS = \"todo/REQUIRE_TASKS\";\r\nexport const SET_TASKS = \"todo/SET_TASKS\";\r\nexport const CREATE_TASK = \"todo/CREATE_TASK\";\r\nexport const UPDATE_TASK = \"todo/UPDATE_TASK\";\r\nexport const DELETE_TASK = \"todo/DELETE_TASK\";\r\nexport const SET_TASKS_AMOUNT_TO_REQUIRE = \"todo/SET_TASKS_AMOUNT_TO_REQUIRE\";\r\n\r\nexport type List = {\r\n  id: string;\r\n  addedDate: string;\r\n  order: number;\r\n  title: string;\r\n};\r\nexport type Task = {\r\n  description: string;\r\n  title: string;\r\n  completed: boolean;\r\n  status: number;\r\n  priority: number;\r\n  startDate: string;\r\n  deadline: string;\r\n  id: string;\r\n  todoListId: string;\r\n  order: number;\r\n  addedDate: string;\r\n};\r\n\r\nconst initialState = {\r\n  authorizeData: {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n  },\r\n  lists: null as Array<List> | null,\r\n  tasks: null as Array<Task> | null,\r\n  tasksTotalCount: null as number | null,\r\n  tasksAmountToRequire: 15,\r\n};\r\n\r\nexport type InitialState = typeof initialState;\r\ntype Action =\r\n  | RequireListsAction\r\n  | SetListsAction\r\n  | DeleteListAction\r\n  | RequireTasksAction\r\n  | SetTasksAction\r\n  | DeleteTaskAction\r\n  | CheckAuthorizationAction\r\n  | SetAuthorizeDataAction\r\n  | SetTasksAmountToRequireAction;\r\n\r\nconst toDoReducer = (state = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHORIZE_DATA:\r\n      return { ...state, authorizeData: { ...action.payload } };\r\n    case SET_LISTS:\r\n      return { ...state, lists: [...action.payload] };\r\n    case SET_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: [...action.payload.items],\r\n        // tasks: [...(state.tasks || []), ...action.payload.items],\r\n        tasksTotalCount: action.payload.totalCount,\r\n      };\r\n    case SET_TASKS_AMOUNT_TO_REQUIRE:\r\n      return {\r\n        ...state,\r\n        tasksAmountToRequire: action.payload\r\n          ? action.payload.newAmount\r\n          : state.tasksAmountToRequire + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toDoReducer;\r\n\r\n// -----action creators-----\r\n\r\nexport type CheckAuthorizationAction = {\r\n  type: typeof CHECK_AUTHORIZATION;\r\n};\r\nexport const checkAuthorization = (): CheckAuthorizationAction => ({ type: CHECK_AUTHORIZATION });\r\n\r\nexport type AuthorizeData = {\r\n  id: number;\r\n  email: string;\r\n  login: string;\r\n};\r\nexport type SetAuthorizeDataAction = {\r\n  type: typeof SET_AUTHORIZE_DATA;\r\n  payload: AuthorizeData;\r\n};\r\nexport const setAuthorizeData = (\r\n  id: number,\r\n  email: string,\r\n  login: string\r\n): SetAuthorizeDataAction => ({\r\n  type: SET_AUTHORIZE_DATA,\r\n  payload: {\r\n    id,\r\n    email,\r\n    login,\r\n  },\r\n});\r\n\r\nexport type LoginData = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n};\r\nexport type LoginAction = {\r\n  type: typeof LOGIN;\r\n  payload: LoginData;\r\n};\r\nexport const login = (loginData: LoginData): LoginAction => ({\r\n  type: LOGIN,\r\n  payload: {\r\n    email: loginData.email,\r\n    password: loginData.password,\r\n    rememberMe: loginData.rememberMe,\r\n  },\r\n});\r\n\r\n// ----LISTS----\r\n\r\ntype RequireListsAction = {\r\n  type: typeof REQUIRE_LISTS;\r\n};\r\nexport const requireLists = (): RequireListsAction => ({ type: REQUIRE_LISTS });\r\n\r\ntype SetListsAction = {\r\n  type: typeof SET_LISTS;\r\n  payload: Array<List>;\r\n};\r\nexport const setLists = (newLists: Array<List>): SetListsAction => ({\r\n  type: SET_LISTS,\r\n  payload: newLists,\r\n});\r\n\r\nexport type CreateListAction = {\r\n  type: typeof CREATE_LIST;\r\n  payload: { title: string };\r\n};\r\nexport const createList = (title: string): CreateListAction => ({\r\n  type: CREATE_LIST,\r\n  payload: { title },\r\n});\r\n\r\nexport type DeleteListAction = {\r\n  type: typeof DELETE_LIST;\r\n  payload: { listId: string };\r\n};\r\nexport const deleteList = (listId: string): DeleteListAction => {\r\n  return { type: DELETE_LIST, payload: { listId } };\r\n};\r\n\r\n// ---TASKS---\r\n\r\nexport type RequireTasksAction = {\r\n  type: typeof REQUIRE_TASKS;\r\n  payload: { listId: string; count: string; page: string };\r\n};\r\nexport const requireTasks = (listId: string, count: string, page: string): RequireTasksAction => ({\r\n  type: REQUIRE_TASKS,\r\n  payload: { listId, count, page },\r\n});\r\n\r\nexport type SetTasksAction = {\r\n  type: typeof SET_TASKS;\r\n  payload: { items: Array<Task>; totalCount: number };\r\n};\r\nexport const setTasks = (tasks: Array<Task>, totalCount: number): SetTasksAction => {\r\n  return { type: SET_TASKS, payload: { items: tasks, totalCount: totalCount } };\r\n};\r\n\r\nexport type CreateTaskAction = {\r\n  type: typeof CREATE_TASK;\r\n  payload: { title: string; listId: string };\r\n};\r\nexport const createTask = (listId: string, taskTitle: string): CreateTaskAction => ({\r\n  type: CREATE_TASK,\r\n  payload: { title: taskTitle, listId: listId },\r\n});\r\n\r\nexport type DeleteTaskAction = {\r\n  type: typeof DELETE_TASK;\r\n  payload: {\r\n    listId: string;\r\n    taskId: string;\r\n  };\r\n};\r\nexport const deleteTask = (listId: string, taskId: string): DeleteTaskAction => {\r\n  return { type: DELETE_TASK, payload: { listId, taskId } };\r\n};\r\n\r\nexport type UpdateTaskAction = {\r\n  type: typeof UPDATE_TASK;\r\n  payload: {\r\n    listId: string;\r\n    taskId: string;\r\n    newTaskStatus: NewTaskStatus;\r\n  };\r\n};\r\nexport const updateTask = (\r\n  listId: string,\r\n  taskId: string,\r\n  newTaskStatus: NewTaskStatus\r\n): UpdateTaskAction => ({\r\n  type: UPDATE_TASK,\r\n  payload: { listId, taskId, newTaskStatus },\r\n});\r\n\r\nexport type SetTasksAmountToRequireAction = {\r\n  type: typeof SET_TASKS_AMOUNT_TO_REQUIRE;\r\n  payload?: { newAmount: number };\r\n};\r\nexport const setTasksAmountToRequire = (newAmount?: number): SetTasksAmountToRequireAction => {\r\n  if (newAmount) return { type: SET_TASKS_AMOUNT_TO_REQUIRE, payload: { newAmount } };\r\n  else return { type: SET_TASKS_AMOUNT_TO_REQUIRE };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  textareaHeight?: string;\r\n};\r\n\r\nconst StyledAddTaskTextarea = styled.textarea<Props>`\r\n  /* border: 3px solid black; */\r\n  border: none;\r\n  outline: none;\r\n  resize: none;\r\n  background: transparent;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  max-height: inherit;\r\n  height: ${(props) => props.textareaHeight || \"auto\"};\r\n\r\n  &:empty {\r\n    height: auto;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 0px;\r\n    border-radius: 0px;\r\n    background-color: #37377063;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background-color: #373770;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n`;\r\n\r\nexport default StyledAddTaskTextarea;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport StyledAddTaskTextarea from \"../StyledComponents/StyledAddTaskTextarea\";\r\n\r\nconst TextArea = (props: any) => {\r\n  const [textareaScrollHeight, setTextareaScrollHeight] = useState(\"auto\");\r\n  const textareaRef = React.createRef<HTMLTextAreaElement>();\r\n\r\n  useEffect(() => {\r\n    const scrollHeight = textareaRef.current?.scrollHeight;\r\n\r\n    if (scrollHeight !== parseInt(textareaScrollHeight)) {\r\n      setTextareaScrollHeight(`${scrollHeight}px`);\r\n    }\r\n  }, [textareaScrollHeight, textareaRef]);\r\n\r\n  return (\r\n    <StyledAddTaskTextarea\r\n      {...props.input}\r\n      {...props.meta}\r\n      type={props.type}\r\n      placeholder={props.placeholder}\r\n      ref={textareaRef}\r\n      textareaHeight={textareaScrollHeight}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import styled from \"styled-components\";\r\n\r\nimport deleteTask from \"../../assets/img/deleteTask.svg\";\r\n\r\ntype Props = {\r\n  picture?: string;\r\n  width?: string;\r\n  picSize?: string;\r\n  height?: string;\r\n  opacity?: number;\r\n};\r\n\r\nconst StyledButton = styled.button<Props>`\r\n  /* border: 1px solid red; */\r\n  width: ${(props) => props.width || \"40px\"};\r\n  min-width: 5%;\r\n  height: ${(props) => props.height || \"none\"};\r\n  padding: 5px;\r\n  background: url(${(props) => props.picture || deleteTask}) center/\r\n    ${(props) => props.picSize || \"20px\"} no-repeat;\r\n  opacity: ${(props) => props.opacity || 0};\r\n  /* margin-left: auto; */\r\n  transition: opacity 0.3s ease;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &&&:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    & {\r\n      min-width: 8%;\r\n    }\r\n  }\r\n  @media (max-width: 450px) {\r\n    & {\r\n      min-width: 10%;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    & {\r\n      min-width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledButton;\r\n","import React from \"react\";\r\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\r\n\r\nimport { FormData } from \"./index\";\r\nimport AddTaskTextArea from \"./AddTaskTextarea\";\r\nimport addTaskPicture from \"../../assets/img/addTask.svg\";\r\nimport StyledButton from \"../StyledComponents/StyledButton\";\r\n\r\ntype Props = {\r\n  onSubmit: (formData: FormData) => void;\r\n};\r\n\r\nconst NewTaskForm: React.FC<InjectedFormProps<FormData, Props>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={AddTaskTextArea}\r\n        name=\"taskTitle\"\r\n        type=\"text\"\r\n        placeholder=\"Что надо сделать?\"\r\n      />\r\n      <StyledButton picture={addTaskPicture} opacity={0.7} width=\"60px\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm<FormData, Props>({ form: \"newTask\" })(NewTaskForm);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport StyledFooter from \"../StyledComponents/StyledFooter\";\r\nimport { createTask } from \"../../redux/toDoReducer\";\r\nimport NewTaskForm from \"./NewTaskForm\";\r\n\r\nconst Footer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const handleFormSubmit = (formData: FormData) => {\r\n    dispatch(createTask(\"f20a07c7-bce6-4d61-921d-12913784ed8b\", formData.taskTitle));\r\n  };\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <NewTaskForm onSubmit={handleFormSubmit} />\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\nexport type FormData = {\r\n  taskTitle: string;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: #292760;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 8vh;\r\n  max-height: 8vh;\r\n\r\n  .title {\r\n    color: #0cc4fa;\r\n    align-self: center;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport default StyledHeader;\r\n","import React from \"react\";\r\n\r\nimport StyledHeader from \"../StyledComponents/StyledHeader\";\r\nimport openMenuPicture from \"../../assets/img/openMenu2.svg\";\r\nimport switchOn from \"../../assets/img/switchOn.svg\";\r\nimport switchOff from \"../../assets/img/switchOff.svg\";\r\nimport StyledButton from \"../StyledComponents/StyledButton\";\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <StyledHeader>\r\n        <StyledButton picture={openMenuPicture} opacity={1} picSize=\"25px\" />\r\n        <div className=\"title\">ToDo List</div>\r\n        <StyledButton picture={switchOn} opacity={1} picSize=\"25px\" />\r\n      </StyledHeader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nimport tick from \"../../assets/img/success_tick.svg\";\r\nimport unTick from \"../../assets/img/unsuccess_tick2.svg\";\r\n\r\ntype Props = {\r\n  completed: number;\r\n};\r\n\r\nconst StyledTask = styled.div<Props>`\r\n  display: flex;\r\n  background-color: #373770;\r\n  border-top: 1px solid transparent;\r\n  border-bottom: 1px solid transparent;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  word-wrap: break-word;\r\n  padding: 0;\r\n\r\n  &:hover {\r\n    background-color: rgba(55, 55, 112, 0.9);\r\n    background-color: #403c76;\r\n  }\r\n  &:hover .deleteTask {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .tick {\r\n    /* width: 40px; */\r\n    width: 5%;\r\n    min-width: 5%;\r\n    background-image: url(${(props) => (props.completed ? tick : unTick)});\r\n    background-size: 20px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n\r\n  .body {\r\n    padding: 5px 0;\r\n    /* border: 1px solid red; */\r\n    /* width: 100%; */\r\n    max-width: 90%;\r\n  }\r\n\r\n  .title {\r\n    word-wrap: break-word;\r\n    color: ${(props) => (props.completed ? \"#8c8eb5\" : \"#DEDFEF\")};\r\n    text-decoration: ${(props) => (props.completed ? \"line-through\" : \"#none\")};\r\n  }\r\n\r\n  .date {\r\n    font-size: 12px;\r\n    color: ${(props) => (props.completed ? \"#426994\" : \"#63a6bd\")};\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    .tick {\r\n      min-width: 7%;\r\n    }\r\n    .body {\r\n      max-width: 85%;\r\n    }\r\n  }\r\n  @media (max-width: 650px) {\r\n    .tick {\r\n      min-width: 10%;\r\n    }\r\n    .body {\r\n      max-width: 82%;\r\n    }\r\n  }\r\n  @media (max-width: 450px) {\r\n    .tick {\r\n      min-width: 11%;\r\n    }\r\n    .body {\r\n      max-width: 79%;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    .tick {\r\n      min-width: 13%;\r\n    }\r\n    .body {\r\n      max-width: 75%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledTask;\r\n","import React from \"react\";\r\n\r\nimport StyledTask from \"../../StyledComponents/StyledTask\";\r\nimport { Task as TaskType } from \"../../../redux/toDoReducer\";\r\nimport { NewTaskStatus } from \"../../../API\";\r\nimport StyledButton from \"../../StyledComponents/StyledButton\";\r\nimport deleteTaskPicture from \"../../../assets/img/deleteTask.svg\";\r\n\r\ntype Props = {\r\n  task: TaskType;\r\n  deleteTask: (listId: string, taskId: string) => void;\r\n  updateTask: (listId: string, taskId: string, newTaskStatus: NewTaskStatus) => void;\r\n};\r\n\r\nconst Task: React.FC<Props> = ({ task, deleteTask, updateTask }) => {\r\n  const completeTask = () => {\r\n    const { title, description, status, priority, startDate, deadline } = task;\r\n    const completedTask = {\r\n      title,\r\n      description,\r\n      status: status === 0 ? 1 : 0,\r\n      priority,\r\n      startDate,\r\n      completed: true,\r\n      deadline,\r\n    };\r\n\r\n    updateTask(task.todoListId, task.id, completedTask);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    deleteTask(task.todoListId, task.id);\r\n  };\r\n\r\n  return (\r\n    <StyledTask completed={task.status}>\r\n      <div className=\"tick\" onClick={completeTask}></div>\r\n      <div className=\"body\">\r\n        <div className=\"title\">{task.title}</div>\r\n        <div className=\"date\">{new Date(task.addedDate).toLocaleString()}</div>\r\n      </div>\r\n      <StyledButton\r\n        className=\"deleteTask\"\r\n        picture={deleteTaskPicture}\r\n        width={\"5%\"}\r\n        onClick={deleteItem}\r\n        style={{ marginLeft: \"auto\" }}\r\n      />\r\n    </StyledTask>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\n// Instead of property the task.completed I use task.status in order the task to be completed. I can't use task.completed because it's not being changed after I send \"task.completed: true\". Now I don't know why)\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  textareaHeight?: string;\r\n};\r\n\r\n// calc(92vh - 50px); 50px - initial textarea height.\r\nconst StyledMain = styled.div<Props>`\r\n  /* border: 1px solid red; */\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n  max-height: calc(92vh - 50px);\r\n  background: #373770;\r\n\r\n  & > div:not(:last-child) {\r\n    border-bottom: 1px solid #292760;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 0px;\r\n    border-radius: 0px;\r\n    background-color: #29276063;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background-color: #292760;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  &::-webkit-scrollbar-corner {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nexport default StyledMain;\r\n","import styled from \"styled-components\";\r\nimport coronaPreloader from \"../../assets/img/mainPreloader.gif\";\r\nimport spinner from \"../../assets/img/spinner.svg\";\r\n\r\ntype Props = {\r\n  type: string;\r\n};\r\n\r\nconst StyledPreloader = styled.div<Props>`\r\n  background: url(${(props) => (props.type === \"corona\" ? coronaPreloader : spinner)}) center\r\n    no-repeat;\r\n  background-size: ${(props) => (props.type === \"corona\" ? \"100px\" : \"30px\")};\r\n  background-color: ${(props) => (props.type === \"corona\" ? \"transparent\" : \"#373770\")};\r\n  height: ${(props) => (props.type === \"corona\" ? \"100vh\" : \"30px\")};\r\n`;\r\n\r\nexport default StyledPreloader;\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nimport Task from \"./Task/Task\";\r\nimport StyledMain from \"../StyledComponents/StyledMain\";\r\nimport { Task as TaskType } from \"../../redux/toDoReducer\";\r\nimport StyledPreloader from \"../StyledComponents/StyledPreloader\";\r\nimport { NewTaskStatus } from \"../../API\";\r\n\r\ntype Props = {\r\n  tasks: Array<TaskType> | null;\r\n  tasksTotalCount: number | null;\r\n  tasksAmountToRequire: number;\r\n  requireTasks: (listId: string, count: string, page: string) => void;\r\n  deleteTask: (listId: string, taskId: string) => void;\r\n  updateTask: (listId: string, taskId: string, newTaskStatus: NewTaskStatus) => void;\r\n  setTasksAmountToRequire: () => void;\r\n};\r\n\r\nconst Main: React.FC<Props> = ({\r\n  tasks,\r\n  requireTasks,\r\n  deleteTask,\r\n  updateTask,\r\n  tasksTotalCount,\r\n  tasksAmountToRequire: count, // initial tasks amount to download from the server\r\n  setTasksAmountToRequire: setCount,\r\n}) => {\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n\r\n  const downloadIndent = 60; // Min scrollBottom height when you need to download data.\r\n\r\n  const scrollMain = useCallback(\r\n    throttle((e: any) => {\r\n      if (e.target) {\r\n        const isMainEnd =\r\n          e.target.scrollHeight - e.target.scrollTop - e.target.offsetHeight <= downloadIndent;\r\n        if (isMainEnd) setCount();\r\n      }\r\n    }, 100),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const { current } = mainRef;\r\n    current?.addEventListener(\"scroll\", scrollMain);\r\n    return () => {\r\n      current?.removeEventListener(\"scroll\", scrollMain);\r\n    };\r\n  }, [scrollMain]);\r\n\r\n  useEffect(() => {\r\n    if (count === tasksTotalCount) {\r\n      if (mainRef.current) {\r\n        mainRef.current.removeEventListener(\"scroll\", scrollMain);\r\n      }\r\n    }\r\n    requireTasks(\"f20a07c7-bce6-4d61-921d-12913784ed8b\", `${count}`, \"1\");\r\n  }, [count, scrollMain]);\r\n\r\n  const tasksList = tasks?.map((task) => (\r\n    <Task key={task.id} task={task} deleteTask={deleteTask} updateTask={updateTask} />\r\n  ));\r\n\r\n  return (\r\n    <StyledMain ref={mainRef}>\r\n      {!tasks && <StyledPreloader type=\"spinner\" />}\r\n      {tasks && tasksList}\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Wrapper from \"../StyledComponents/Wrapper\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport Main from \"../Main\";\nimport { Props as AppProps } from \"./indexContainer\";\n\nconst App: React.FC<AppProps> = (props) => {\n  return (\n    <Wrapper>\n      <Header />\n      <div className=\"container\">\n        <Main\n          tasks={props.tasks}\n          requireTasks={props.requireTasks}\n          deleteTask={props.deleteTask}\n          updateTask={props.updateTask}\n          tasksTotalCount={props.tasksTotalCount}\n          tasksAmountToRequire={props.tasksAmountToRequire}\n          setTasksAmountToRequire={props.setTasksAmountToRequire}\n        />\n        <Footer />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { RootState } from \"./store\";\r\n\r\nexport const getLists = (state: RootState) => state.toDo.lists;\r\nexport const getTasks = (state: RootState) => state.toDo.tasks;\r\nexport const getTasksTotalCount = (state: RootState) => state.toDo.tasksTotalCount;\r\nexport const getUserId = (state: RootState) => state.toDo.authorizeData.id;\r\nexport const getTasksAmountToRequire = (state: RootState) => state.toDo.tasksAmountToRequire;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport App from \".\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  getTasks,\r\n  getTasksTotalCount,\r\n  getUserId,\r\n  getTasksAmountToRequire,\r\n} from \"../../redux/toDoSelectors\";\r\nimport {\r\n  Task,\r\n  requireTasks,\r\n  deleteList,\r\n  deleteTask,\r\n  updateTask,\r\n  checkAuthorization,\r\n  setTasksAmountToRequire,\r\n} from \"../../redux/toDoReducer\";\r\nimport StyledPreloader from \"../StyledComponents/StyledPreloader\";\r\nimport { NewTaskStatus } from \"../../API\";\r\n\r\nexport type Props = {\r\n  userId: number | null;\r\n  tasks: Array<Task> | null;\r\n  tasksTotalCount: number | null;\r\n  tasksAmountToRequire: number;\r\n  requireTasks: (listId: string, count: string, page: string) => void;\r\n  deleteList: (listId: string) => void;\r\n  deleteTask: (listId: string, taskId: string) => void;\r\n  updateTask: (listId: string, taskId: string, newTaskStatus: NewTaskStatus) => void;\r\n  checkAuthorization: () => void;\r\n  setTasksAmountToRequire: () => void;\r\n};\r\n\r\nconst AppContainer: React.FC<Props> = (props) => {\r\n  useEffect(() => {\r\n    props.checkAuthorization();\r\n  }, []);\r\n\r\n  if (!props.userId) return <StyledPreloader type=\"corona\" />;\r\n\r\n  return <App {...props} />;\r\n};\r\n\r\nconst mstp = (state: RootState) => {\r\n  return {\r\n    userId: getUserId(state),\r\n    tasks: getTasks(state),\r\n    tasksTotalCount: getTasksTotalCount(state),\r\n    tasksAmountToRequire: getTasksAmountToRequire(state),\r\n  };\r\n};\r\nconst mdtp = {\r\n  requireTasks,\r\n  deleteTask,\r\n  deleteList,\r\n  updateTask,\r\n  checkAuthorization,\r\n  setTasksAmountToRequire,\r\n};\r\n\r\nexport default connect(mstp, mdtp)(AppContainer);\r\n","import axios from \"axios\";\r\n\r\nimport { List, Task } from \"../redux/toDoReducer\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.1\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"a12bc084-f676-4a1e-bd69-8d4f17b429fd\",\r\n  },\r\n});\r\n\r\nexport type MeResponse = {\r\n  data: {\r\n    id: number;\r\n    email: string;\r\n    login: string;\r\n  };\r\n  resultCode: number;\r\n  messages: Array<string>;\r\n};\r\n\r\nexport type LoginResponse = {\r\n  data: {\r\n    userId: number;\r\n  };\r\n  resultCode: number;\r\n  messages: Array<string>;\r\n};\r\n\r\nexport const authorizeAPI = {\r\n  async me() {\r\n    try {\r\n      const response = await instance.get<MeResponse>(\r\n        `https://social-network.samuraijs.com/api/1.1/auth/me`\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(`Перехвачена ошибка в API при проверке авторизации: ${err}`);\r\n    }\r\n  },\r\n  async login(email: string, password: string, rememberMe: boolean) {\r\n    try {\r\n      const response = await instance.post<LoginResponse>(\r\n        `https://social-network.samuraijs.com/api/1.1/auth/login`,\r\n        { email, password, rememberMe }\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(`Перехвачена ошибка в API при логинизации: ${err}`);\r\n    }\r\n  },\r\n};\r\n\r\n// ----LISTS API----\r\n\r\nexport type GetListsResponse = Array<List>;\r\nexport type GetTasksResponse = {\r\n  items: Array<Task>;\r\n  totalCount: number;\r\n  error: string;\r\n};\r\nexport type CreateListResponse = {\r\n  data: {\r\n    addedDate: string;\r\n    id: string;\r\n    order: number;\r\n    title: string;\r\n  };\r\n  messages: Array<string>;\r\n  resultCode: number;\r\n};\r\nexport type DeleteListResponse = {\r\n  resultCode: number;\r\n  messages: Array<string>;\r\n  data: Object;\r\n};\r\nexport const listsAPI = {\r\n  async getLists() {\r\n    const response = await instance.get<GetListsResponse>(\"todo-lists\");\r\n    return response.data;\r\n  },\r\n  async createList(listTitle: string) {\r\n    const response = await instance.post<CreateListResponse>(\"todo-lists\", {\r\n      title: listTitle,\r\n    });\r\n    return response.data;\r\n  },\r\n  async deleteList(listId: string) {\r\n    const response = await instance.delete<DeleteListResponse>(`todo-lists/${listId}`);\r\n    return response.data;\r\n  },\r\n\r\n  updateListTitle(listId: number, newTitle: string) {\r\n    return instance\r\n      .put(`todo-lists/${listId}`, { title: newTitle })\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\n// -----TASKS API-----\r\n\r\nexport type CreateTaskResponse = {\r\n  resultCode: number;\r\n  messages: Array<string>;\r\n  data: { item: DataItem };\r\n};\r\nexport type DataItem = {\r\n  description: string;\r\n  title: string;\r\n  completed: boolean;\r\n  status: number;\r\n  priority: number;\r\n  startDate: string;\r\n  deadline: string;\r\n  id: string;\r\n  todoListId: string;\r\n  order: number;\r\n  addedDate: string;\r\n};\r\nexport type NewTaskStatus = {\r\n  title: string;\r\n  description: string;\r\n  completed: boolean;\r\n  status: number;\r\n  priority: number;\r\n  startDate: string;\r\n  deadline: string;\r\n};\r\nexport type UpdateTaskResponse = CreateTaskResponse;\r\nexport type DeleteTaskResponse = DeleteListResponse;\r\n\r\nexport const tasksAPI = {\r\n  async getTasks(listId: string, count: string, page: string) {\r\n    const response = await instance.get<GetTasksResponse>(\r\n      `todo-lists/${listId}/tasks?count=${count}&page=${page}`\r\n    );\r\n    return response.data;\r\n  },\r\n  async createTask(listId: string, taskTitle: string) {\r\n    const response = await instance.post<CreateTaskResponse>(`todo-lists/${listId}/tasks`, {\r\n      title: taskTitle,\r\n    });\r\n    return response.data;\r\n  },\r\n  async updateTask(listId: string, taskId: string, newTaskStatus: NewTaskStatus) {\r\n    console.log(\"from API --- \", listId, \" \", taskId, \" \", newTaskStatus);\r\n    try {\r\n      const response = await instance.put<UpdateTaskResponse>(\r\n        `todo-lists/${listId}/tasks/${taskId}`,\r\n        newTaskStatus\r\n      );\r\n\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(\"Ошибка в API updateTask: \", err);\r\n    }\r\n  },\r\n  async deleteTask(listId: string, taskId: string) {\r\n    try {\r\n      const response = await instance.delete<DeleteTaskResponse>(\r\n        `todo-lists/${listId}/tasks/${taskId}`\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(\"Ошибка в API deleteTask: \", err);\r\n    }\r\n  },\r\n};\r\n","import { takeEvery, put, call, all, select } from \"redux-saga/effects\";\r\nimport { reset } from \"redux-form\";\r\n\r\nimport {\r\n  listsAPI,\r\n  CreateListResponse,\r\n  tasksAPI,\r\n  CreateTaskResponse,\r\n  GetTasksResponse,\r\n  DeleteListResponse,\r\n  DeleteTaskResponse,\r\n  UpdateTaskResponse,\r\n  authorizeAPI,\r\n  MeResponse,\r\n  LoginResponse,\r\n} from \"../API\";\r\nimport {\r\n  REQUIRE_LISTS,\r\n  List,\r\n  setLists,\r\n  CREATE_LIST,\r\n  CreateListAction,\r\n  requireLists,\r\n  CREATE_TASK,\r\n  CreateTaskAction,\r\n  requireTasks,\r\n  REQUIRE_TASKS,\r\n  RequireTasksAction,\r\n  setTasks,\r\n  DELETE_LIST,\r\n  DeleteListAction,\r\n  DELETE_TASK,\r\n  DeleteTaskAction,\r\n  UPDATE_TASK,\r\n  UpdateTaskAction,\r\n  CHECK_AUTHORIZATION,\r\n  setAuthorizeData,\r\n  LOGIN,\r\n  LoginAction,\r\n  checkAuthorization,\r\n  login,\r\n  setTasksAmountToRequire,\r\n} from \"./toDoReducer\";\r\nimport { getTasksAmountToRequire } from \"./toDoSelectors\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    requireListsWatcher(),\r\n    createListWatcher(),\r\n    requireTasksWatcher(),\r\n    createTaskWatcher(),\r\n    deleteListWatcher(),\r\n    deleteTaskWatcher(),\r\n    updateTaskWatcher(),\r\n    checkAuthorizationWatcher(),\r\n    loginWatcher(),\r\n  ]);\r\n}\r\n\r\n// ----AUTHORIZE----\r\n\r\nconst loginData = {\r\n  email: \"forNetworkServer@yandex.ru\",\r\n  password: \"6832115\",\r\n  rememberMe: true,\r\n};\r\n\r\nexport function* checkAuthorizationWatcher() {\r\n  yield takeEvery(CHECK_AUTHORIZATION, checkAuthorizationWorker);\r\n}\r\nexport function* checkAuthorizationWorker() {\r\n  try {\r\n    const data: MeResponse = yield call(authorizeAPI.me);\r\n    if (data.resultCode === 0) {\r\n      const { id, email, login } = data.data;\r\n      yield put(setAuthorizeData(id, email, login));\r\n    } else if (data.resultCode !== 0 && data.messages[0] === \"You are not authorized\") {\r\n      yield put(login(loginData));\r\n    } else {\r\n      console.log(`Возникла ошибка на сервере во время авторизации: ${data.messages[0]}`);\r\n    }\r\n  } catch (err) {\r\n    console.log(`Произошла ошибка во время авторизации: ${err}`);\r\n  }\r\n}\r\n\r\nexport function* loginWatcher() {\r\n  yield takeEvery(LOGIN, loginWorker);\r\n}\r\nexport function* loginWorker(action: LoginAction) {\r\n  const { email, password, rememberMe } = action.payload;\r\n  try {\r\n    const data: LoginResponse = yield call(authorizeAPI.login, email, password, rememberMe);\r\n    if (data.resultCode === 0) yield put(checkAuthorization());\r\n    else console.log(`Возникла ошибка на сервере во время логинизации: ${data.messages[0]}`);\r\n  } catch (err) {\r\n    console.log(`Произошла ошибка по время логинизации: ${err}`);\r\n  }\r\n}\r\n\r\n// ---LISTS---\r\nexport function* requireListsWatcher() {\r\n  yield takeEvery(REQUIRE_LISTS, requireListsWorker);\r\n}\r\nexport function* requireListsWorker() {\r\n  try {\r\n    const listsData: Array<List> = yield call(listsAPI.getLists);\r\n    console.log(\"listsData--- \", listsData);\r\n\r\n    yield put(setLists(listsData));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* createListWatcher() {\r\n  yield takeEvery(CREATE_LIST, createListWorker);\r\n}\r\nexport function* createListWorker(action: CreateListAction) {\r\n  try {\r\n    const data: CreateListResponse = yield call(listsAPI.createList, action.payload.title);\r\n\r\n    if (data.resultCode === 0) {\r\n      yield put(requireLists());\r\n    } else {\r\n      yield console.log(\"Ошибка при создании нового Листа: \", data.messages[0]);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* deleteListWatcher() {\r\n  yield takeEvery(DELETE_LIST, deleteListWorker);\r\n}\r\nexport function* deleteListWorker(action: DeleteListAction) {\r\n  try {\r\n    const data: DeleteListResponse = yield call(listsAPI.deleteList, action.payload.listId);\r\n\r\n    if (data.resultCode === 0) {\r\n      yield put(requireLists());\r\n    } else {\r\n      console.log(`Возникла ошибка при удалении Листа: ${data.messages[0]}`);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Ошибка при удалении List: \", err);\r\n  }\r\n}\r\n\r\n// ---TASK---\r\n\r\nexport function* requireTasksWatcher() {\r\n  yield takeEvery(REQUIRE_TASKS, requireTasksWorker);\r\n}\r\nexport function* requireTasksWorker(action: RequireTasksAction) {\r\n  const { listId, count, page } = action.payload;\r\n  try {\r\n    const data: GetTasksResponse = yield call(tasksAPI.getTasks, listId, count, page);\r\n    console.log(\"tasks--- \", data);\r\n\r\n    yield put(setTasks(data.items, data.totalCount));\r\n  } catch (err) {\r\n    console.log(\"Ошибка при загрузке списка задач: \", err);\r\n  }\r\n}\r\n\r\nexport function* createTaskWatcher() {\r\n  yield takeEvery(CREATE_TASK, createTaskWorker);\r\n}\r\nexport function* createTaskWorker(action: CreateTaskAction) {\r\n  yield put(reset(\"newTask\"));\r\n  try {\r\n    const data: CreateTaskResponse = yield call(\r\n      tasksAPI.createTask,\r\n      action.payload.listId,\r\n      action.payload.title\r\n    );\r\n    console.log(\"createTask--- \", data);\r\n\r\n    if (data.resultCode === 0) {\r\n      const tasksAmountToRequire = yield select(getTasksAmountToRequire);\r\n      yield put(setTasksAmountToRequire(tasksAmountToRequire + 1));\r\n      yield put(requireTasks(action.payload.listId, `${tasksAmountToRequire}`, \"1\"));\r\n    } else {\r\n      yield console.log(\"Ошибка при создании Таски: \", data.messages[0]);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Ошибка при создании Таски:\", err);\r\n  }\r\n}\r\n\r\nexport function* deleteTaskWatcher() {\r\n  yield takeEvery(DELETE_TASK, deleteTaskWorker);\r\n}\r\nexport function* deleteTaskWorker(action: DeleteTaskAction) {\r\n  const { listId, taskId } = action.payload;\r\n  try {\r\n    const data: DeleteTaskResponse = yield call(tasksAPI.deleteTask, listId, taskId);\r\n    if (data.resultCode === 0) {\r\n      const tasksAmountToRequire = yield select(getTasksAmountToRequire);\r\n\r\n      yield put(setTasksAmountToRequire(tasksAmountToRequire - 1));\r\n      yield put(requireTasks(listId, `${tasksAmountToRequire}`, \"1\"));\r\n    } else {\r\n      console.log(`Возникла ошибка на сервере во время удаления Таски: ${data.messages[0]}`);\r\n    }\r\n  } catch (err) {\r\n    console.log(`Возникла ошибка во время удаления Таски: ${err}`);\r\n  }\r\n}\r\n\r\nexport function* updateTaskWatcher() {\r\n  yield takeEvery(UPDATE_TASK, updateTaskWorker);\r\n}\r\nexport function* updateTaskWorker(action: UpdateTaskAction) {\r\n  console.log(\"Сработал апдейт\");\r\n\r\n  const { listId, taskId, newTaskStatus } = action.payload;\r\n  try {\r\n    const data: UpdateTaskResponse = yield call(tasksAPI.updateTask, listId, taskId, newTaskStatus);\r\n\r\n    if (data.resultCode === 0) {\r\n      const tasksAmountToRequire = yield select(getTasksAmountToRequire);\r\n      yield put(requireTasks(listId, `${tasksAmountToRequire}`, \"1\"));\r\n    } else {\r\n      console.log(`Возникла ошибка на сервере во время изменения Таски: ${data.messages[0]}`);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Произошла ошибка при изменении Таски: \", err);\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nimport toDoReducer from \"./toDoReducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst rootReducer = combineReducers({\r\n  toDo: toDoReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\ntype RootReducer = typeof rootReducer;\r\nexport type RootState = ReturnType<RootReducer>;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport AppContainer from \"./Components/App/indexContainer\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/deleteTask.fa3eefef.svg\";"],"sourceRoot":""}